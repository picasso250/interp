g: \fact. \n. cond(
	(n=1)? 1
	else ? n * ((fact fact) (n-1))
)
(g g) 5

h: \f. \n. cond(
	(n=1)? 1
	else ? n * (f (n-1))
)

g: \fact. h (\x. (fact fact) x)

(g g) 5

Y: \f. let (
	q: \k. f (\x. (k k) x)
) q q

(Y h) 5

; let () q q
; q: \k. h (\x. (k k) x)
; h (\x. (q q) x) ; f
; (\n. cond ()) 5
; cond ()
; 5 * ((\x. (q q) x) (4))
; (\x. (q q) x) 4
; (q q)
